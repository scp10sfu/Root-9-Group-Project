{"ast":null,"code":"var _jsxFileName = \"/Users/okcom/Documents/School/SFU/Fall_2023/CMPT276/TeamProject/Root-9-Group-Project/colour-palette/src/Pages/ColorPicker.js\",\n  _s = $RefreshSig$();\n/**\n * ColorPicker component for extracting palettes from images.\n * ColorPicker.js\n * @component\n */\nimport React, { useState, useRef, useEffect } from 'react';\nimport ColorThief from 'colorthief';\nimport axios from 'axios';\nimport { ReactComponent as UploadIcon } from '../images/icon-upload.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ColorPicker() {\n  _s();\n  const [numberOfColors, setNumberOfColors] = useState(10);\n  const [image, setImage] = useState(null);\n  const [colors, setColors] = useState([]);\n  const [isImagePreviewActive, setIsImagePreviewActive] = useState(true);\n  const imgRef = useRef(null);\n  const colorThief = new ColorThief();\n  const [backgroundStyle, setBackgroundStyle] = useState({});\n\n  /**\n   * Converts RGB values to HEX format.\n   * @param {number} r - The red value (0 to 255).\n   * @param {number} g - The green value (0 to 255).\n   * @param {number} b - The blue value (0 to 255).\n   * @returns {string} The HEX representation of the RGB values.\n   */\n  const rgbToHex = (r, g, b) => '#' + [r, g, b].map(x => {\n    const hex = x.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n  }).join('');\n\n  /**\n   * Extracts colors from the loaded image using ColorThief and updates the state.\n   * @returns {Promise<void>} A Promise that resolves when the extraction is complete.\n   */\n  const extractColors = async () => {\n    if (imgRef.current && imgRef.current.complete) {\n      try {\n        const palette = colorThief.getPalette(imgRef.current, numberOfColors);\n        const colorPromises = palette.map(async rgb => {\n          const hex = rgbToHex(...rgb);\n          const cmyk = rgbToCmyk(...rgb);\n          const name = await fetchColorName(hex);\n          return {\n            hex,\n            rgb: `rgb(${rgb.join(', ')})`,\n            cmyk: `cmyk(${cmyk.join(', ')})`,\n            name\n          };\n        });\n        const colorObjects = await Promise.all(colorPromises);\n        setColors(colorObjects);\n\n        // Update the background style based on the extracted colors\n        const background = {};\n        for (let i = 0; i < colorObjects.length; i++) {\n          var _colorObjects$i;\n          background[`--color${i + 1}`] = (_colorObjects$i = colorObjects[i]) === null || _colorObjects$i === void 0 ? void 0 : _colorObjects$i.hex;\n        }\n        setBackgroundStyle(background);\n      } catch (error) {\n        console.error('Error extracting the colors:', error);\n      }\n    }\n  };\n\n  /**\n   * Fetches color name from the API based on HEX code.\n   * @param {string} hex - HEX color code.\n   * @returns {Promise<string>} Resolves with the color name.\n   */\n  const fetchColorName = async hex => {\n    try {\n      const response = await axios.get(`https://www.thecolorapi.com/id?hex=${hex.replace('#', '')}`);\n      return response.data.name.value;\n    } catch (error) {\n      console.error('Error fetching the color name:', error);\n      return hex; // Fallback to HEX if the name can't be fetched\n    }\n  };\n\n  useEffect(() => {\n    const currentImgRef = imgRef.current;\n    if (image) {\n      extractColors();\n    }\n    if (currentImgRef && currentImgRef.complete) {\n      extractColors();\n    }\n    if (imgRef.current && imgRef.current.complete) {\n      extractColors();\n    }\n    return () => {\n      if (imgRef.current) {\n        imgRef.current.removeEventListener('load', extractColors);\n      }\n    };\n  }, [numberOfColors]);\n  const handleNumberChange = number => {\n    setNumberOfColors(number);\n    extractColors();\n  };\n  const handleImageChange = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = e => {\n        setImage(e.target.result);\n        localStorage.setItem('savedImage', e.target.result);\n        setIsImagePreviewActive(false);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleClosePreview = () => {\n    setImage(null);\n    setColors([]);\n    setIsImagePreviewActive(true);\n  };\n  const rgbToCmyk = (r, g, b) => {\n    let c = 1 - r / 255;\n    let m = 1 - g / 255;\n    let y = 1 - b / 255;\n    let k = Math.min(c, Math.min(m, y));\n    c = (c - k) / (1 - k) || 0;\n    m = (m - k) / (1 - k) || 0;\n    y = (y - k) / (1 - k) || 0;\n    c = Math.round(c * 100);\n    m = Math.round(m * 100);\n    y = Math.round(y * 100);\n    k = Math.round(k * 100);\n    return [c, m, y, k];\n  };\n  const NumberButton = ({\n    number,\n    isActive\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `number-button ${isActive ? 'active' : ''}`,\n    onClick: () => handleNumberChange(number),\n    children: number\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 6\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ColorPicker\",\n    style: backgroundStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: Array.from({\n        length: 20\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: `var(--color${i + 1})`\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"content-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"text_block\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Color Extractor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Extract wonderful palettes from your image.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 12\n        }, this), isImagePreviewActive && /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"upload-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageChange,\n            id: \"fileInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fileInput\",\n            children: /*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"text_block\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text_block_text\",\n                children: [/*#__PURE__*/_jsxDEV(UploadIcon, {\n                  className: \"upload-icon\",\n                  style: {\n                    width: '30px',\n                    height: '30px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Click or drag image to upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 22\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text_block_subtext\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"info-icon\",\n                  children: \"i\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 22\n                }, this), \" Max file size: XX MB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 14\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button\",\n            onClick: handleClosePreview,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            ref: imgRef,\n            src: image,\n            alt: \"To extract colors from\",\n            crossOrigin: \"anonymous\",\n            onLoad: extractColors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"color-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"number-of-colors-label\",\n            children: \"The number of plate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 14\n          }, this), [4, 6, 8, 10].map(number => /*#__PURE__*/_jsxDEV(NumberButton, {\n            number: number,\n            isActive: numberOfColors === number\n          }, number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 16\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: `color-palette ${colors.length === 2 ? 'two-colors' : colors.length === 8 ? 'eight-colors' : ''}`,\n        children: colors.map((colorObj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color\",\n          style: {\n            backgroundColor: colorObj.hex\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"color-name\",\n            children: colorObj.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"color-hex\",\n            children: [\"HEX: \", colorObj.hex]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"color-rgb\",\n            children: [\"RGB: \", colorObj.rgb]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"color-cmyk\",\n            children: [\"CMYK: \", colorObj.cmyk]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 16\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 14\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 6\n  }, this);\n}\n_s(ColorPicker, \"GtzBwbuoGy6d38aJfVl1KJ8x7rs=\");\n_c = ColorPicker;\nexport default ColorPicker;\nvar _c;\n$RefreshReg$(_c, \"ColorPicker\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ColorThief","axios","ReactComponent","UploadIcon","jsxDEV","_jsxDEV","ColorPicker","_s","numberOfColors","setNumberOfColors","image","setImage","colors","setColors","isImagePreviewActive","setIsImagePreviewActive","imgRef","colorThief","backgroundStyle","setBackgroundStyle","rgbToHex","r","g","b","map","x","hex","toString","length","join","extractColors","current","complete","palette","getPalette","colorPromises","rgb","cmyk","rgbToCmyk","name","fetchColorName","colorObjects","Promise","all","background","i","_colorObjects$i","error","console","response","get","replace","data","value","currentImgRef","removeEventListener","handleNumberChange","number","handleImageChange","event","target","files","file","reader","FileReader","onload","e","result","localStorage","setItem","readAsDataURL","handleClosePreview","c","m","y","k","Math","min","round","NumberButton","isActive","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","style","Array","from","_","color","type","accept","onChange","id","htmlFor","width","height","ref","src","alt","crossOrigin","onLoad","colorObj","index","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/okcom/Documents/School/SFU/Fall_2023/CMPT276/TeamProject/Root-9-Group-Project/colour-palette/src/Pages/ColorPicker.js"],"sourcesContent":["/**\n * ColorPicker component for extracting palettes from images.\n * ColorPicker.js\n * @component\n */\n import React, { useState, useRef, useEffect } from 'react';\n import ColorThief from 'colorthief';\n import axios from 'axios';\n import { ReactComponent as UploadIcon } from '../images/icon-upload.svg';\n \n function ColorPicker() {\n   const [numberOfColors, setNumberOfColors] = useState(10);\n   const [image, setImage] = useState(null);\n   const [colors, setColors] = useState([]);\n   const [isImagePreviewActive, setIsImagePreviewActive] = useState(true);\n   const imgRef = useRef(null);\n   const colorThief = new ColorThief();\n   const [backgroundStyle, setBackgroundStyle] = useState({});\n \n   /**\n    * Converts RGB values to HEX format.\n    * @param {number} r - The red value (0 to 255).\n    * @param {number} g - The green value (0 to 255).\n    * @param {number} b - The blue value (0 to 255).\n    * @returns {string} The HEX representation of the RGB values.\n    */\n   const rgbToHex = (r, g, b) => '#' + [r, g, b].map(x => {\n     const hex = x.toString(16);\n     return hex.length === 1 ? '0' + hex : hex;\n   }).join('');\n \n   /**\n    * Extracts colors from the loaded image using ColorThief and updates the state.\n    * @returns {Promise<void>} A Promise that resolves when the extraction is complete.\n    */\n   const extractColors = async () => {\n     if (imgRef.current && imgRef.current.complete) {\n       try {\n         const palette = colorThief.getPalette(imgRef.current, numberOfColors);\n         const colorPromises = palette.map(async (rgb) => {\n           const hex = rgbToHex(...rgb);\n           const cmyk = rgbToCmyk(...rgb);\n           const name = await fetchColorName(hex);\n           return { hex, rgb: `rgb(${rgb.join(', ')})`, cmyk: `cmyk(${cmyk.join(', ')})`, name };\n         });\n         const colorObjects = await Promise.all(colorPromises);\n         setColors(colorObjects);\n \n         // Update the background style based on the extracted colors\n         const background = {};\n         for (let i = 0; i < colorObjects.length; i++) {\n           background[`--color${i + 1}`] = colorObjects[i]?.hex;\n         }\n         setBackgroundStyle(background);\n       } catch (error) {\n         console.error('Error extracting the colors:', error);\n       }\n     }\n   };\n \n   /**\n    * Fetches color name from the API based on HEX code.\n    * @param {string} hex - HEX color code.\n    * @returns {Promise<string>} Resolves with the color name.\n    */\n   const fetchColorName = async (hex) => {\n     try {\n       const response = await axios.get(`https://www.thecolorapi.com/id?hex=${hex.replace('#', '')}`);\n       return response.data.name.value;\n     } catch (error) {\n       console.error('Error fetching the color name:', error);\n       return hex; // Fallback to HEX if the name can't be fetched\n     }\n   };\n \n   useEffect(() => {\n     const currentImgRef = imgRef.current;\n     if (image) {\n       extractColors();\n     }\n     if (currentImgRef && currentImgRef.complete) {\n       extractColors();\n     }\n     if (imgRef.current && imgRef.current.complete) {\n       extractColors();\n     }\n     return () => {\n       if (imgRef.current) {\n         imgRef.current.removeEventListener('load', extractColors);\n       }\n     };\n   }, [numberOfColors]);\n \n   const handleNumberChange = (number) => {\n     setNumberOfColors(number);\n     extractColors();\n   };\n \n   const handleImageChange = (event) => {\n     if (event.target.files && event.target.files.length > 0) {\n       const file = event.target.files[0];\n       const reader = new FileReader();\n \n       reader.onload = (e) => {\n         setImage(e.target.result);\n         localStorage.setItem('savedImage', e.target.result);\n         setIsImagePreviewActive(false);\n       };\n       reader.readAsDataURL(file);\n     }\n   };\n \n   const handleClosePreview = () => {\n     setImage(null);\n     setColors([]);\n     setIsImagePreviewActive(true);\n   };\n \n   const rgbToCmyk = (r, g, b) => {\n     let c = 1 - (r / 255);\n     let m = 1 - (g / 255);\n     let y = 1 - (b / 255);\n     let k = Math.min(c, Math.min(m, y));\n \n     c = ((c - k) / (1 - k)) || 0;\n     m = ((m - k) / (1 - k)) || 0;\n     y = ((y - k) / (1 - k)) || 0;\n \n     c = Math.round(c * 100);\n     m = Math.round(m * 100);\n     y = Math.round(y * 100);\n     k = Math.round(k * 100);\n \n     return [c, m, y, k];\n   };\n \n   const NumberButton = ({ number, isActive }) => (\n     <button\n       className={`number-button ${isActive ? 'active' : ''}`}\n       onClick={() => handleNumberChange(number)}\n     >\n       {number}\n     </button>\n   );\n \n   return (\n     <div className=\"ColorPicker\" style={backgroundStyle}>\n       <div className=\"background\">\n         {Array.from({ length: 20 }, (_, i) => (\n           <span key={i} style={{ color: `var(--color${i + 1})` }}></span>\n         ))}\n       </div>\n       <main className=\"app-content\">\n         <section className=\"content-block\">\n           <header className=\"text_block\">\n             <h1>Color Extractor</h1>\n             <p>Extract wonderful palettes from your image.</p>\n           </header>\n \n           {isImagePreviewActive && (\n             <section className=\"upload-area\">\n               <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} id=\"fileInput\" />\n               <label htmlFor=\"fileInput\">\n                 <header className=\"text_block\">\n                   <div className=\"text_block_text\">\n                     <UploadIcon className=\"upload-icon\" style={{ width: '30px', height: '30px' }} />\n                     <p>Click or drag image to upload</p>\n                   </div>\n                   <div className=\"text_block_subtext\">\n                     <i className=\"info-icon\">i</i> Max file size: XX MB\n                   </div>\n                 </header>\n               </label>\n             </section>\n           )}\n \n           {image && (\n             <div className=\"image-preview\">\n               <button className=\"close-button\" onClick={handleClosePreview}>\n                 <span>&times;</span>\n               </button>\n               <img\n                 ref={imgRef}\n                 src={image}\n                 alt=\"To extract colors from\"\n                 crossOrigin=\"anonymous\"\n                 onLoad={extractColors}\n               />\n             </div>\n           )}\n \n           <section className=\"color-controls\">\n             <p className=\"number-of-colors-label\">The number of plate</p>\n             {[4, 6, 8, 10].map((number) => (\n               <NumberButton\n                 key={number}\n                 number={number}\n                 isActive={numberOfColors === number}\n               />\n             ))}\n           </section>\n         </section>\n \n         <section className={`color-palette ${colors.length === 2 ? 'two-colors' : colors.length === 8 ? 'eight-colors' : ''}`}>\n           {colors.map((colorObj, index) => (\n             <div key={index} className=\"color\" style={{ backgroundColor: colorObj.hex }}>\n               <p className=\"color-name\">{colorObj.name}</p>\n               <p className=\"color-hex\">HEX: {colorObj.hex}</p>\n               <p className=\"color-rgb\">RGB: {colorObj.rgb}</p>\n               <p className=\"color-cmyk\">CMYK: {colorObj.cmyk}</p>\n             </div>\n           ))}\n         </section>\n       </main>\n     </div>\n   );\n }\n \n export default ColorPicker;\n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}