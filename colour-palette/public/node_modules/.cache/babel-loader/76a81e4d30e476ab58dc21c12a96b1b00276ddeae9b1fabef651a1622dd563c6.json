{"ast":null,"code":"var _jsxFileName = \"/Users/okcom/Documents/School/SFU/Fall_2023/CMPT276/TeamProject/Root-9-Group-Project/colour-palette/src/Components/ColorSwitcher.js\",\n  _s = $RefreshSig$();\n// ColorSwitcher.js\n\nimport React, { useContext } from 'react';\n//import { ColorContext } from '../App';\nimport { createContext, useState } from 'react';\nimport ReactSwitch from \"react-switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{/*const ColorSwitcher = () => {\n  const { darkTheme, toggleTheme } = useContext(ColorContext);\n   return (\n    <div className=\"theme-switcher\">\n      <button onClick={toggleTheme}>\n        {darkTheme ? 'Switch to Light' : 'Switch to Dark'}\n      </button>\n    </div>\n  );\n };\n export default ColorSwitcher;*/}\n{/*\n trying to have a theme switch bar, added switch bar, might be some library not connect\n did not show as expected, ideally when user toggles then will show different mode \n -cindy \n */}\nexport const ThemeContext = /*#__PURE__*/createContext(null);\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState(\"light\");\n  const toggleTheme = () => {\n    setTheme(curr => curr === \"light\" ? \"dark\" : \"light\");\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      id: theme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: theme === \"light\" ? \"Light Mode\" : \"Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReactSwitch, {\n          onChange: toggleTheme,\n          checked: theme === \"dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"1NR3O0/bzzhjlLyt740h+JhxH9c=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","createContext","useState","ReactSwitch","jsxDEV","_jsxDEV","ThemeContext","App","_s","theme","setTheme","toggleTheme","curr","Provider","value","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","onChange","checked","_c","$RefreshReg$"],"sources":["/Users/okcom/Documents/School/SFU/Fall_2023/CMPT276/TeamProject/Root-9-Group-Project/colour-palette/src/Components/ColorSwitcher.js"],"sourcesContent":["// ColorSwitcher.js\n\nimport React, { useContext } from 'react';\n//import { ColorContext } from '../App';\nimport { createContext, useState } from 'react';\nimport ReactSwitch from \"react-switch\";\n\n{/*const ColorSwitcher = () => {\n  const { darkTheme, toggleTheme } = useContext(ColorContext);\n\n  return (\n    <div className=\"theme-switcher\">\n      <button onClick={toggleTheme}>\n        {darkTheme ? 'Switch to Light' : 'Switch to Dark'}\n      </button>\n    </div>\n  );\n};\nexport default ColorSwitcher;*/}\n\n\n{/*\ntrying to have a theme switch bar, added switch bar, might be some library not connect\ndid not show as expected, ideally when user toggles then will show different mode \n-cindy \n*/ }\nexport const ThemeContext = createContext(null);\nfunction App(){\n  const[theme, setTheme] = useState(\"light\");\n  const toggleTheme = () => {\n    setTheme((curr) => (curr === \"light\" ? \"dark\" : \"light\"));\n  };\n  return(\n      <ThemeContext.Provider value = {{theme, setTheme}}>\n        <div className= \"App\" id={theme}>\n          <div className=\"switch\" >\n            <label>{theme === \"light\" ? \"Light Mode\" : \"Dark Mode\"}</label>\n          <ReactSwitch onChange={toggleTheme} checked={theme=== \"dark\"}/>\n          </div>\n        </div>\n      </ThemeContext.Provider>\n\n  )}\n\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC;AACA,SAASC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,WAAW,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAVC;AAcD,CAAC;AACD;AACA;AACA;AACA,GAJC;AAKD,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAC/C,SAASM,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACZ,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EAC1C,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAAEE,IAAI,IAAMA,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EAC3D,CAAC;EACD,oBACIP,OAAA,CAACC,YAAY,CAACO,QAAQ;IAACC,KAAK,EAAI;MAACL,KAAK;MAAEC;IAAQ,CAAE;IAAAK,QAAA,eAChDV,OAAA;MAAKW,SAAS,EAAE,KAAK;MAACC,EAAE,EAAER,KAAM;MAAAM,QAAA,eAC9BV,OAAA;QAAKW,SAAS,EAAC,QAAQ;QAAAD,QAAA,gBACrBV,OAAA;UAAAU,QAAA,EAAQN,KAAK,KAAK,OAAO,GAAG,YAAY,GAAG;QAAW;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjEhB,OAAA,CAACF,WAAW;UAACmB,QAAQ,EAAEX,WAAY;UAACY,OAAO,EAAEd,KAAK,KAAI;QAAO;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE3B;AAACb,EAAA,CAfKD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}